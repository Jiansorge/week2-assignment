{"version":3,"sources":["Articles/Article/Image.js","Articles/Article/Features.js","Articles/Article/Summary/Summary.js","Articles/Article/Detail/Detail.js","Articles/Article/Article.js","Articles/Articles.js","SocialNetwork.js","App.js","serviceWorker.js","index.js"],"names":["Image","react_default","a","createElement","className","this","props","type","src","article","image","alt","title","height","width","React","Component","Features","hasAudioAvailable","hasMemberPreview","memberPreview","role","aria-label","Summary","description","Detail","isMediumMember","author","postedDate","Date","postedMonth","toLocaleString","month","postedDay","getDate","name","minutesToRead","Article","console","log","href","link","Article_Image","Articles_Article_Features","Article_Summary_Summary","Article_Detail_Detail","Articles","_this","articles","map","index","Articles_Article_Article","key","SocialNetwork","src_Articles_Articles","yourArticles","missedArticles","App","src_SocialNetwork_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d38e59f9.chunk.js","sourcesContent":["import React from 'react';\n// import PropTypes from 'prop-types';\n\nclass Image extends React.Component {\n    // constructor(props) {\n    //   super(props);\n    // }\n  \n    render() {\n      return (\n        <img     className = {(this.props.type===\"your-articles\" ? \"image main-article\" : \"image sub-article\")}\n \n          src={this.props.article.image} \n          alt={this.props.article.title}\n          height=\"200\"\n          width=\"200\" \n        />\n        \n      )\n    }\n  }\n\n  export default Image;","import React from 'react';\nimport './Features.css';\n// import PropTypes from 'prop-types';\n\nclass Features extends React.Component {\n\n   render() {\n    const hasAudioAvailable = this.props.article.hasAudioAvailable;\n    const hasMemberPreview = this.props.article.memberPreview;\n\n\n    if (hasAudioAvailable && hasMemberPreview){\n      return (\n        <aside className=\"features\">\n            <span className=\"audio\" role=\"img\" aria-label=\"audio available\">\n            &#128266;\n            Audio Available\n            </span>  \n            <span className=\"preview-audio\" role=\"img\" aria-label=\"member preview\">\n              &#9733;          \n            </span>\n        </aside>\n      );\n    } else if (hasAudioAvailable){\n      return (\n        <aside className=\"features\">\n            <span className=\"audio\" role=\"img\" aria-label=\"speaker\">\n            &#128266;\n            Audio Available\n            </span>  \n        </aside>\n      );    \n    } else if (hasMemberPreview){\n      return (\n        <aside className=\"features\">\n          <span className=\"preview\" role=\"img\" aria-label=\"member preview\">\n            &#9733;\n            Member Preview \n          </span>  \n        </aside>\n      );    \n    } else {\n      return (\n        <div className=\"none\"></div>\n      )\n    }\n  }\n}\n  \n  \nexport default Features;","// Summary\n//  - Title\n//  - Description\n\nimport React from 'react';\nimport './Summary.css'\n// import PropTypes from 'prop-types';\n\nclass Summary extends React.Component {\n\n    render() {\n      let type = this.props.type;\n      // if (type===\"your-articles\"){\n      //   type = \"main-article\";\n      //   // console.log (type);\n      // } else if(type === \"missed-articles\") {\n      //   type = \"sub-article\";\n      //   console.log(type)\n      // };\n\n      return (\n        <div className = {(type===\"your-articles\" ? \"summary main-article\" : \"summary sub-article\")}>\n          <h3 className=\"title\">\n            {this.props.article.title}\n            \n          </h3>\n          <p className={\"description\"}>\n            {this.props.article.description}\n          </p>\n        </div>\n      );\n    }\n\n  }\n  export default Summary;","// Detail\n//  - Avatar\n//     - Medium Member Highlight (optional)\n//  - Author\n//  - Posted Date (Month Date)\n//  - Minutes to Read\n//  - Bookmark\n\nimport React from 'react';\nimport './Detail.css'\n// import PropTypes from 'prop-types';\n\nclass Detail extends React.Component {\n  \n    render() {\n        const isMediumMember = this.props.article.author.isMediumMember;\n        const postedDate = new Date(this.props.article.postedDate)\n        //console.log(postedDate.getDate())\n        const postedMonth = postedDate.toLocaleString('en-us', { month: 'long' });\n        const postedDay = postedDate.getDate();\n        //{this.props.article.postedDate.monthIndex.toString}\n\n       return (\n          <div className=\"detail\">\n            <img className= {(isMediumMember ? \"avatar medium-member\" : \"avatar\" )} \n                src ={this.props.article.author.image} alt=\"this.props.article.author.name\"\n            />\n            <div className=\"detail-info\">\n                <p className=\"name\">\n                  {this.props.article.author.name}\n                </p>\n                <div className=\"posted-info\">\n                  <p className=\"posted-date\">\n                    {postedMonth} {postedDay} &#8226;&nbsp;\n                  </p>\n                  <p className=\"minutes-to-read\">\n                    {this.props.article.minutesToRead} min read\n                  </p>\n                </div>\n            </div>\n            <span className=\"bookmark\" role=\"img\" aria-label=\"bookmark\">\n              &#128278;\n            </span>\n          </div>\n        );\n      }\n    }\n  \n  \n  \n  export default Detail;","// creates structure for Article comonent.  \n// css depends if Articles calls 'yours' vs 'missed'\n\n// Your Articles / Missed Articles\n//  - Article\n//      - Image\n//      - Audio Available (optional feature)\n//      - Member Preview (optional feature)\n//      - Summary\n//      - Detail\n\nimport React from 'react';\nimport Image from './Image.js';\nimport Features from './Features.js';\nimport Summary from './Summary/Summary.js';\nimport Detail from './Detail/Detail.js';\nimport './Article.css'\n\n\n// import PropTypes from 'prop-types';\n\n\nclass Article extends React.Component {\n\n\n    render() {\n      const type = this.props.type;\n      console.log(this.props.type);\n      return (\n        <a className={(type===\"your-articles\" ? \"article main-article\" : \"article sub-article\")} href={this.props.article.link}>\n\n            <Image article={this.props.article} type={type}\n            />\n            <div className={(type===\"your-articles\" ? \"article-info main-article\" : \"article-info sub-article\")}\n            >\n              <Features article={this.props.article} />\n              <Summary article={this.props.article} type={type}/>\n              <Detail article={this.props.article} />\n            </div>\n        </a>\n  \n      )\n    }\n  }\n  \n  \n  export default Article;","// hosts article components\n// calls specific css for 'your' vs 'missed' articles\n\n    // called from SocialNetwork.js\n    //  - Articles (yours)\n    //  - Articles (missed)\n\nimport React from 'react';\nimport Article from './Article/Article.js';\nimport './Articles.css'\n\n//import PropTypes from 'prop-types';\n\nclass Articles extends React.Component {\n\n  render() {\n    return (\n        <div className=\"main-articles\">\n            <h3 className=\"qqq\">{this.props.title}</h3>\n            <div className=\"articles\">\n                {this.props.articles\n                    .map((article, index) => (\n                        <Article  \n                            article={article} \n                            key = {index}\n                            type ={this.props.type}\n                            className={this.props.type}\n                        />\n                ))}\n            </div>\n            \n\n        </div>\n    )\n  }\n}\n\n// <Article />\n\nexport default Articles;","import React from 'react';\nimport Articles from './Articles/Articles.js';\nimport './SocialNetwork.css'\nimport yourArticles from  './your-articles.json';\nimport missedArticles from  './missed-articles.json';\n\nclass SocialNetwork extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {\n    //         yourArticles: [],\n    //         missedArticles: []\n    //     };\n    // }\n\n    // App Structure:\n    // SocialNetwork\n    //  - Articles (yours)\n    //  - Articles (missed)\n\n    // Your Articles / Missed Articles\n    //  - Article\n    //      - Image\n    //      - Audio Available (optional)\n    //      - Member Preview (optional)\n    //      - Summary\n    //      - Detail\n\n    // Summary\n    //  - Title\n    //  - Description\n\n    // Detail\n    //  - Avatar\n    //     - Medium Member Highlight (optional)\n    //  - Author\n    //  - Posted Date (Month Date)\n    //  - Minutes to Read\n    //  - Bookmark\n\n\n    render() {\n        return (\n            <div className=\"social-network\">\n\n                <Articles articles={yourArticles} title=\"For you\" type=\"your-articles\"/>\n                <Articles articles={missedArticles} title=\"In case you missed it\" type=\"missed-articles\"/>\n\n            </div>\n        );\n    }\n}\n\nexport default SocialNetwork;\n\n                // <Articles type='your' title=\"For you\" articles={yourArticles} />\n                // <Articles type='missed' title=\"In case you missed it\" articles={missedArticles} />","import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport SocialNetwork from './SocialNetwork.js';\n//import missedArticles from './missed-articles.json';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header> */}\n        <SocialNetwork />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import '../node_modules/font-awesome/css/font-awesome.min.css'; \nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}